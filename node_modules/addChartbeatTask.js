var fs = require('fs'),
cheerio = require('cheerio'),
model = require('model'),
ncp = require('ncp'),
cheerio = require('cheerio');
 
function AddChartbeatTask() {

	/*------------------------------------------------------------------
		Variables
	------------------------------------------------------------------*/
	var taskFlow = [addHeadScript, addBodyScript];
	var currentSubTask = 0;

	/*------------------------------------------------------------------
		Methods
	------------------------------------------------------------------*/
	function go() {

		/*---------------
			Strings
		---------------*/

		/*---------------
			Listeners
		---------------*/
		// model.eventEmitter.emitEvent(model.emitterEvents.ARTICLE_TASK_COMPLETE);

		/*---------------
			Things to do:
			 * make a little require controller that loads istats and sets a global variable that can be accessed by the rest of the shorthand article (that isn't using amd modules)
				* copy the require library over to the shorthand article package
				* copy the istats library over
				* copy over the boot.js that require will load
				* add the require/boot script tag to the html file
				* TODO: pause the normal operation of the article until istats has loaded
			 * pause the article until istats has loaded and then re-initialise it again when ready
		---------------*/

		taskFlow[0]();

	}
	this.go = go;

	function addHeadScript() {
		var scriptTagStr = "\n<script type=\"text/javascript\">var _sf_startpt=(new Date()).getTime()</script>";
		//add this script as high up in the head as you can
		readModuleFile(model.outputFolderPath + '/index.html', function (err, indexHtmlStr) {
			if (err) {
				console.log("err = ", err);
			}
			var $ = cheerio.load(indexHtmlStr);
			//find the script tag for the story js file and the require/boot script tag on a line before that
			
			var metaTags = $('meta');
			console.log("metaTags = ", metaTags);
			if (metaTags.length) {
				$(metaTags[metaTags.length - 1]).after(scriptTagStr);
				var indexFileOutputStr = $.html();
				writeOutFile(model.outputFolderPath + '/index.html', indexFileOutputStr, subTaskComplete);
			}
			else {
				console.log("ERROR; can't find and meta tags in the html file");
			}

		});
	}

	function addBodyScript() {
		var scriptStr = "<!-- Chartbeat Web Analytics code - start -->" +
						"<script type=\"text/javascript\">" +
							"var _sf_async_config={};" +
							"/** CONFIGURATION START **/" +
							"_sf_async_config.uid = \"50924\";" +
							"_sf_async_config.domain = \"m.bbc.co.uk\";" +
							"_sf_async_config.sections = \"europe\";" +
							"<!-- if page is an index, add the edition to the path -->" +
							"_sf_async_config.path = \"/news/world-europe-26366700\";" +
						"<?php if ($this->type == 'IDX'): ?>" +
							"_sf_async_config.title = \"<?= $this->title ?>\";" +
						"<?php endif; ?>" +
							"/** CONFIGURATION END **/" +
							"(function(){" +
								"function loadChartbeat() {" +
									"window._sf_endpt=(new Date()).getTime();" +
									"var e = document.createElement(\"script\");" +
									"e.setAttribute(\"language\", \"javascript\");" +
									"e.setAttribute(\"type\", \"text/javascript\");" +
									"e.setAttribute('src', '//static.chartbeat.com/js/chartbeat.js');" +
									"document.body.appendChild(e);" +
								"}" +
								"var oldonload = window.onload;" +
								"window.onload = (typeof window.onload != \"function\") ?" +
									"loadChartbeat : function() { oldonload(); loadChartbeat(); };" +
							"}());" +
						"</script>" +
						"<!-- Chartbeat Web Analytics code - end -->";

		readModuleFile(model.outputFolderPath + '/index.html', function (err, indexHtmlStr) {
			if (err) {
				console.log("err = ", err);
			}
			var $ = cheerio.load(indexHtmlStr);
			//find the script tag for the story js file and the require/boot script tag on a line before that
			$('body').append(scriptStr);
			//final index.html string output
			var indexFileOutputStr = $.html();
			//write out the index string
			writeOutFile(model.outputFolderPath + '/index.html', indexFileOutputStr, subTaskComplete);

		});
	}

	function addHtmlScript() {
		var scriptStr = "<script data-main=\"static/js/boot\" src=\"lib/require.js\"></script>\n";

		readModuleFile(model.outputFolderPath + '/index.html', function (err, indexHtmlStr) {
			if (err) {
				console.log("err = ", err);
			}
			var $ = cheerio.load(indexHtmlStr);
			//find the script tag for the story js file and the require/boot script tag on a line before that
			$('body').append(scriptStr);
			//final index.html string output
			var indexFileOutputStr = $.html();
			//write out the index string
			writeOutFile(model.outputFolderPath + '/index.html', indexFileOutputStr, subTaskComplete);

		});
		
	}

	function subTaskComplete() {
		currentSubTask ++;
		if (currentSubTask < taskFlow.length) {
			taskFlow[currentSubTask]();
		}
		else {
			taskComplete();
		}
	}

	function taskComplete() {
		model.eventEmitter.emitEvent(model.emitterEvents.ARTICLE_TASK_COMPLETE);
	}

	/*------------------------------------------------------------------
		UTILITIES
	------------------------------------------------------------------*/
	function readModuleFile(path, callback) {
		try {
			var filename = require.resolve(path);
			fs.readFile(filename, 'utf8', callback);
		} catch (e) {
			callback(e);
		}
	}

	function writeOutFile(filePath, fileContents, callback) {
	fs.writeFile(filePath, fileContents, function(fileWriteErr) {
		if (fileWriteErr) {
			model.stateMachine.publishStateChange(model.appStates.ERROR_STATE, "couldn't remove google analytics from the project");
		}
		else {
			callback();
		}
	});
}

}
 
module.exports = new AddChartbeatTask();