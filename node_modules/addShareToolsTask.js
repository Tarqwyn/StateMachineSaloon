var fs = require('fs'),
cheerio = require('cheerio'),
model = require('model'),
ncp = require('ncp'),
cheerio = require('cheerio');
 
function AddShareToolsTask() {

	/*------------------------------------------------------------------
		Variables
	------------------------------------------------------------------*/
	var taskFlow = [copyEventEmitterLib, copyJQueryLib, copyBootstrap, copyModel, copyView];
	var currentSubTask = 0;

	/*------------------------------------------------------------------
		Methods
	------------------------------------------------------------------*/
	function go() {

		/*---------------
			Strings
		---------------*/

		/*---------------
			Listeners
		---------------*/
		// model.eventEmitter.emitEvent(model.emitterEvents.ARTICLE_TASK_COMPLETE);

		/*---------------
			Things to do:
			 * Do stuff
		---------------*/

		taskFlow[0]();

	}
	this.go = go;

	function copyEventEmitterLib() {
		var emitterLibPath = model.localAssetsPath + model.jsLibPath + "/event_emitter.js";
		var outputDir = model.outputFolderPath + "/lib";
		//make the lib directory
		if (!fs.existsSync(outputDir)) {
			fs.mkdirSync(outputDir);
		}
		
		//copy the require lib into the new lib directory
		ncp(emitterLibPath, outputDir + "/event_emitter.js", function (err) {
			if (err) {
				return console.error("copy error: ", err);
			}
			
			subTaskComplete();

		});
	}

	function copyJQueryLib() {
		var jqLibPath = model.localAssetsPath + model.jsLibPath + "/jquery.js";
		var outputDir = model.outputFolderPath + "/lib";
		//make the lib directory
		if (!fs.existsSync(outputDir)) {
			fs.mkdirSync(outputDir);
		}
		
		//copy the require lib into the new lib directory
		ncp(jqLibPath, outputDir + "/jquery.js", function (err) {
			if (err) {
				return console.error("copy error: ", err);
			}
			
			subTaskComplete();

		});
	}

	function copyBootstrap() {
		var bootjsPath = model.localAssetsPath + model.jsPath + "/bootstrap.js";
		var outputDir = model.outputFolderPath + "/static/js";
		
		//copy the istats lib into the new lib directory
		ncp(bootjsPath, outputDir + "/bootstrap.js", function (err) {
			if (err) {
				return console.error("copy error: ", err);
			}

			subTaskComplete();
		});
	}

	//copyModel, copyView
	function copyModel() {
		var bootjsPath = model.localAssetsPath + model.jsPath + "/nsshare-model.js";
		var outputDir = model.outputFolderPath + "/static/js";
		
		//copy the istats lib into the new lib directory
		ncp(bootjsPath, outputDir + "/nsshare-model.js", function (err) {
			if (err) {
				return console.error("copy error: ", err);
			}

			subTaskComplete();
		});
	}

	function copyView() {
		var bootjsPath = model.localAssetsPath + model.jsPath + "/nsshare-view.js";
		var outputDir = model.outputFolderPath + "/static/js";
		
		//copy the istats lib into the new lib directory
		ncp(bootjsPath, outputDir + "/nsshare-view.js", function (err) {
			if (err) {
				return console.error("copy error: ", err);
			}

			subTaskComplete();
		});
	}

	function subTaskComplete() {
		currentSubTask ++;
		if (currentSubTask < taskFlow.length) {
			taskFlow[currentSubTask]();
		}
		else {
			taskComplete();
		}
	}

	function taskComplete() {
		model.eventEmitter.emitEvent(model.emitterEvents.ARTICLE_TASK_COMPLETE);
	}

	/*------------------------------------------------------------------
		UTILITIES
	------------------------------------------------------------------*/
	function readModuleFile(path, callback) {
		try {
			var filename = require.resolve(path);
			fs.readFile(filename, 'utf8', callback);
		} catch (e) {
			callback(e);
		}
	}

	function writeOutFile(filePath, fileContents, callback) {
	fs.writeFile(filePath, fileContents, function(fileWriteErr) {
		if (fileWriteErr) {
			model.stateMachine.publishStateChange(model.appStates.ERROR_STATE, "error witing file: " + filePath);
		}
		else {
			callback();
		}
	});
}

}
 
module.exports = new AddShareToolsTask();