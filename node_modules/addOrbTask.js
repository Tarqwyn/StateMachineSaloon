var fs = require('fs'),
ncp = require('ncp'),
cheerio = require('cheerio'),
model;
 
function AddOrbTask() {

	/*------------------------------------------------------------------
		Variables
	------------------------------------------------------------------*/
	var taskFlow = [addBodyScript];
	var currentSubTask = 0;
	var projectName, indexHtmlPath;
	var $;

	/*------------------------------------------------------------------
		Methods
	------------------------------------------------------------------*/
	function go() {

		console.log('add orbscroll');

		model = require('model');
		$ = $ || model.$;

		/*---------------
			Strings
		---------------*/

		/*---------------
			Listeners
		---------------*/
		// model.eventEmitter.emitEvent(model.emitterEvents.ARTICLE_TASK_COMPLETE);

		/*---------------
			Things to do:
			 * add js script tag to the head
			 * add the main orbscroll js script tag to the end of the body
		---------------*/

		taskFlow[0]();

	}
	this.go = go;


	function addBodyScript() {
		
		var orbscrollMarkupPath = model.localAssetsPath + model.markupPath + "/orbscroll.html";
		var orbscrollInitStr = fs.readFileSync(orbscrollMarkupPath, 'utf8');

		readModuleFile(model.outputFolderPath + '/index.html', function (err, indexHtmlStr) {
			if (err) {
				console.log("err = ", err);
			}
			var $ = cheerio.load(indexHtmlStr);
			//find the script tag for the story js file and the require/boot script tag on a line before that
			console.log(orbscrollInitStr);
			$('body').append(orbscrollInitStr);
			//final index.html string output
			var indexFileOutputStr = $.html();
			//write out the index string
			writeOutFile(model.outputFolderPath + '/index.html', indexFileOutputStr, subTaskComplete);

		});
	}

	function subTaskComplete() {
		currentSubTask ++;
		if (currentSubTask < taskFlow.length) {
			taskFlow[currentSubTask]();
		}
		else {
			taskComplete();
		}
	}

	function taskComplete() {
		model.eventEmitter.emitEvent(model.emitterEvents.ARTICLE_TASK_COMPLETE);
	}

	/*------------------------------------------------------------------
		UTILITIES
	------------------------------------------------------------------*/
	function readModuleFile(path, callback) {
		try {
			var filename = require.resolve(path);
			fs.readFile(filename, 'utf8', callback);
		} catch (e) {
			callback(e);
		}
	}

	function writeOutFile(filePath, fileContents, callback) {
	fs.writeFile(filePath, fileContents, function(fileWriteErr) {
		if (fileWriteErr) {
			model.stateMachine.publishStateChange(model.appStates.ERROR_STATE, "couldn't write file " + filePath + " :s");
		}
		else {
			callback();
		}
	});
}

}
 
module.exports = new AddOrbTask();