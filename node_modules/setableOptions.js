var fs = require('fs'),
model = require('model');
 
function SetableOptions() {

	/*------------------------------------------------------------------
		Variables
	------------------------------------------------------------------*/
	var $ = model.$, el;
	var MView = {
		"selectableOptions": []
	};

	/*------------------------------------------------------------------
		Methods
	------------------------------------------------------------------*/
	function promptUserForOptions() {
		$ = $ || model.$;

		$el = $('.toolholder');

		/*---------------
			Strings
		---------------*/
		var titleStr = "ShortHand repurposing tool";

		/*---------------
			Dom stuff
		---------------*/
		var appTitle = $('.appTitle');
		appTitle.html(titleStr);

		$el.empty();

		$el.load("../html/screens/setableOptions.html", screenHtmlLoaded);

		/*---------------
			Listeners
		---------------*/

	}
	this.promptUserForOptions = promptUserForOptions;

	function screenHtmlLoaded() {

		var a, arrLength = model.processTasks.length;
		for (a = 0; a < arrLength; a++) {
			MView.selectableOptions.push(
				{
					id: model.processTasks[a].id,
					checked: model.processTasks[a].checked,
					name: model.processTasks[a].name
				}
			);
		}
		var MOutput = model.Mustache.render($el[0].innerHTML, MView);
		$el[0].innerHTML = MOutput;

		var nextBtn = $('#setOptionsNextBtn');
		nextBtn.click(function() {
			$("input").each(function(index) {
				model.setableOptionsArr.push({id:this.id, taskName:this.id, checked:this.checked});
			});

			model.stateMachine.publishStateChange(model.appStates.PROCESS_ARTICLE);
		});
	}

	/*------------------------------------------------------------------
		UTILITIES
	------------------------------------------------------------------*/

}
 
module.exports = new SetableOptions();