var fs      = require('fs');
var ncp     = require('ncp');
var cheerio = require('cheerio');
var _       = require('lodash');
var model;
 
function AddBbcVideoTask() {

	/*------------------------------------------------------------------
		Variables
	------------------------------------------------------------------*/
	var taskFlow = [lookForVideoHooks, lookForFullWidthVidHooks, addBackgroundVideos, addRequireMap];
	var currentSubTask = 0;
	var projectName, indexHtmlPath;
	var $;
	var vidsToAdd = [];

	/*------------------------------------------------------------------
		Methods
	------------------------------------------------------------------*/
	function go() {

		model = require('model');
		$ = $ || model.$;
		var $el = $('.toolholder');

		/*---------------
			Strings
		---------------*/

		/*---------------
			Listeners
		---------------*/

		/*---------------
			Things to do:
			 * look through the html file for the bbc video hook {{#bbcVideo}} and its closing tag {{/bbcVideo}} anything inbetween these tags is treated as the map page id/hook
				an example of a video hook might be: {{#bbcVideo}}news/science-environment-23296136{{/bbcVideo}}
			 * from the map page id/hook you should be able to construct the playlist xml path eg: http://playlists.bbc.co.uk/news/science-environment-23296136A/playlist.sxml

			For instructions on how to embed SMP video look here: 
			https://confluence.dev.bbc.co.uk/display/mp/Embedding+and+controlling+a+Standard+Media+Player

			and some setting info:
			https://confluence.dev.bbc.co.uk/display/mp/SMP+Settings+Object
		---------------*/

		taskFlow[0]();

	}
	this.go = go;

	function addBackgroundVideos () {
		loadTheShorthandWebPageWithDOM(function ($) {
			model.promptUserForJiraNumber();
			$('.background-overlay video').each(function (i, elm)  {
				if (elm.children[1].name == 'source') {
					$(this).parent().html(renderBackgroundVideoTemplate(getMapIdFromVideoElm(model.jiraNumber, elm)));
				}
			});
			writeOutFile(shorthandWebPageLocation(), $.html(), subTaskComplete);
		});
	}

	function loadTheShorthandWebPageWithDOM (callback2) {
		readModuleFile(shorthandWebPageLocation(), function (err, indexHtmlStr) {
			 if (err) {
				console.log("err = ", err);
			}
			var $ = cheerio.load(indexHtmlStr);
			callback2($);
		});
	}

	function shorthandWebPageLocation () {
		return model.outputFolderPath + '/index.html';
	}

	function renderBackgroundVideoTemplate(mapId) {
		var backgroundVideoTemplate = fs.readFileSync(model.localAssetsPath + model.markupPath + "/backgroundVideo.html", 'utf8');
		console.log(_.template(backgroundVideoTemplate)({mapId: mapId}));
		return _.template(backgroundVideoTemplate)({mapId: mapId});
	}

	function getMapIdFromVideoElm (jiraNumber, elm) {
		var backgroundVideoMapping = getBackgroundVideoMappingJSON();
		var videoId = elm.children[1].attribs.src.replace(/\.\/media\/([a-zA-Z0-9_-]+).*/, "$1");
		return backgroundVideoMapping[jiraNumber][videoId]; // map == Media Asset Page
	}

	function getBackgroundVideoMappingJSON () {
		return JSON.parse(fs.readFileSync('assets/config/backgroundVideoMapping.json', 'utf8'));
	}

	function lookForVideoHooks() {
		var indexPath = model.outputFolderPath + '/index.html';
		readModuleFile(indexPath, function (err, indexHtmlStr) {
			if (err) {
				console.log("err = ", err);
			}

			var regex = /{{#bbcVideo}}(.*?){{\/bbcVideo}}/gi;

			var foundMatches = indexHtmlStr.match(regex);

			if (foundMatches) {
				var a, arrLength = foundMatches.length;
				for (a = 0; a < arrLength; a++) {
					var videoIdHook = foundMatches[a].substring(13, foundMatches[a].length - 13);
					var newDivId = "mediaPlayer" + vidsToAdd.length;
					vidsToAdd.push({
						playlistXmlPath: "http://playlists.bbc.co.uk/" + videoIdHook + "A/playlist.sxml",
						newDivId: newDivId
					});

					var divMarkup = "<div style=\"position:relative; width:100%; height:0; padding-bottom:56.25%;\">" +
										"<div id=\"" + newDivId + "\" style=\"position:absolute; width:100%; height:100%;\" class=\"ns_lf_video\">" +
										"</div>" +
									"</div>";
					indexHtmlStr = indexHtmlStr.strReplace(foundMatches[a], divMarkup);
				}

				writeOutFile(indexPath, indexHtmlStr, subTaskComplete);
			}
			else {
				subTaskComplete();
			}

		});
	}


	function lookForFullWidthVidHooks() {
		readModuleFile(model.outputFolderPath + '/index.html', function (err, indexHtmlStr) {
			if (err) {
				console.log("err = ", err);
			}

			var $ = cheerio.load(indexHtmlStr);
			var pTags = $('p');
			//Loop through all the script tags in the page
			arrLength = pTags.length;
			for (a = 0; a < arrLength; a++) {
				if (pTags[a]) {
					if (pTags[a].children.length) {
						var pStr = (pTags[a].children[0].data.match) ? pTags[a].children[0].data : "nope";
						
						var regex = /{{#bbcVideoFullWidth}}(.*?){{\/bbcVideoFullWidth}}/gi;
						var foundMatches = pStr.match(regex);
						if (foundMatches) {
							var videoIdHook = foundMatches[0].substring(22, foundMatches[0].length - 22);
							var newDivId = "mediaPlayerFullWidth" + vidsToAdd.length;
							vidsToAdd.push({
								playlistXmlPath: "http://playlists.bbc.co.uk/" + videoIdHook + "A/playlist.sxml",
								newDivId: newDivId
							});


							var divMarkup = "<div style=\"position:relative; width:100%; height:0; padding-bottom:56.25%;\">" +
										"<div id=\"" + newDivId + "\" style=\"position:absolute; width:100%; height:100%;\" class=\"ns_lf_video\">" +
										"</div>" +
									"</div>";

							var targetAdjacentDiv = $(pTags[a]).parent().parent().parent().parent();
							if (targetAdjacentDiv) {
								targetAdjacentDiv.before(divMarkup);
								targetAdjacentDiv.remove();
							}
						}
					}
				}
			}

			//final index.html string output
			indexFileOutputStr = $.html();

			//write out the index string
			writeOutFile(model.outputFolderPath + '/index.html', indexFileOutputStr, subTaskComplete);

		});
	}


	function addRequireMap() {

		var mediaPlayerStrForVids = "";
		var a, arrLength = vidsToAdd.length;

		var testStageVidUrls = [
			'http://playlists.bbc.co.uk/news/business-22887599A/playlist.sxml',
			'http://playlists.bbc.co.uk/news/uk-politics-22884864A/playlist.sxml',
			'http://playlists.bbc.co.uk/news/business-22867122A/playlist.sxml'
		];


		for (a = 0; a < arrLength; a++) {
			mediaPlayerStrForVids = mediaPlayerStrForVids +
									"\n\t\tvar mediaPlayer" + a + " = bump('#" + vidsToAdd[a].newDivId + "').player(settings);" +
									"\n\t\tmediaPlayer" + a + ".load('" + vidsToAdd[a].playlistXmlPath + "');" +
									"\n\t\tsmpVidsController[\"" + vidsToAdd[a].newDivId + "\"] = {autoPlay:false, mp:mediaPlayer" + a + ", userPaused:false, autoPaused:true};" +
									"\n\t\t";
			// mediaPlayerStrForVids = mediaPlayerStrForVids +
			// 						"\n\t\tvar mediaPlayer" + a + " = $mp('#" + vidsToAdd[a].newDivId + "').player(settings);" +
			// 						"\n\t\tmediaPlayer" + a + ".load('" + testStageVidUrls[a] + "');" +
			// 						"\n\t\tsmpVidsController[\"" + vidsToAdd[a].newDivId + "\"] = {autoPlay:false, mp:mediaPlayer" + a + ", userPaused:false, autoPaused:true};" +
			// 						"\n\t\t";
			
		}

		var smpControllerMarkupPath = model.localAssetsPath + model.markupPath + "/smpControllerMarkup.html";
		var smpControllerMarkupStr = fs.readFileSync(smpControllerMarkupPath, 'utf8');

		// smpControllerMarkupStr = smpControllerMarkupStr.strReplace("{{#vidsLength}}", vidsToAdd.length);
		smpControllerMarkupStr = smpControllerMarkupStr.strReplace("{{#vidsLength}}", 1);
		smpControllerMarkupStr = smpControllerMarkupStr.strReplace("{{#mediaPlayersInit}}", mediaPlayerStrForVids);

		var scriptStrToLookFor = "story.min.js";

		//loop through the script tags and find the common.{id num}.js script tag
		readModuleFile(model.outputFolderPath + '/index.html', function (err, indexHtmlStr) {
			if (err) {
				console.log("err = ", err);
			}

			var $ = cheerio.load(indexHtmlStr);
			var scriptTags = $('script');
			//Loop through all the script tags in the page
			arrLength = scriptTags.length;
			for (a = 0; a < arrLength; a++) {
				if (scriptTags[a]) {
					var scriptTag = scriptTags[a];
					var scriptSrc = scriptTag.attribs.src;

					//scriptStrToLookFor
					var indexOfScripStr = (scriptSrc) ? (scriptSrc.indexOf(scriptStrToLookFor) + 1) : 0;

					if (indexOfScripStr) {
						$(scriptTag).before(smpControllerMarkupStr);
						break;
					}
				}
			}

			//final index.html string output
			indexFileOutputStr = $.html();

			model.bbcVideosExist = true;

			//write out the index string
			writeOutFile(model.outputFolderPath + '/index.html', indexFileOutputStr, subTaskComplete);


		});
	}

	function subTaskComplete() {
		currentSubTask ++;
		if (currentSubTask < taskFlow.length) {
			taskFlow[currentSubTask]();
		}
		else {
			taskComplete();
		}
	}

	function taskComplete() {
		model.eventEmitter.emitEvent(model.emitterEvents.ARTICLE_TASK_COMPLETE);
	}

	/*------------------------------------------------------------------
		UTILITIES
	------------------------------------------------------------------*/
	function readModuleFile(path, callback) {
		try {
			var filename = require.resolve(path);
			fs.readFile(filename, 'utf8', callback);
		} catch (e) {
			callback(e);
		}
	}

	function writeOutFile(filePath, fileContents, callback) {
	fs.writeFile(filePath, fileContents, function(fileWriteErr) {
		if (fileWriteErr) {
			model.stateMachine.publishStateChange(model.appStates.ERROR_STATE, "couldn't write file " + filePath + " :s");
		}
		else {
			callback();
		}
	});
}

}
 
module.exports = new AddBbcVideoTask();