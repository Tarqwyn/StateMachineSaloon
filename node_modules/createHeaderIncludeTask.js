var fs = require('fs'),
cheerio = require('cheerio'),
ncp = require('ncp'),
model;
 
function createHeaderIncludeTask() {

	function go() {
		model = require('model');
		var originalHtmlFilePath = model.outputFolderPath + '/index.html';

		readModuleFile(originalHtmlFilePath, function (err, indexHtmlStr) {
			if (err) {
				console.log("err = ", err);
			}
			indexHtmlStr = indexHtmlStr.replace('typeof define!=="undefined"&&define.amd','false');
			
			var $ = cheerio.load(indexHtmlStr);

			var head = $('head');
			if (head) {
				head.find('meta[charset="utf-8"]').remove();
				head.find('title').remove();
				head.find('meta[name="description"]').remove();
				head.find('meta[name="author"]').remove();
				head.find('meta[name="viewport"]').remove();
				writeOutFile(model.outputFolderPath + '/head.inc', head.html());
				model.eventEmitter.emitEvent(model.emitterEvents.ARTICLE_TASK_COMPLETE);
			}

		});

	}
	this.go = go;

	function readModuleFile(path, callback) {
		try {
			var filename = require.resolve(path);
			fs.readFile(filename, 'utf8', callback);
		} catch (e) {
			callback(e);
		}
	}

	function writeOutFile(filePath, fileContents) {
		fs.writeFile(filePath, fileContents, function(fileWriteErr) {
			if (fileWriteErr) {
				console.log(fileWriteErr);
				model.stateMachine.publishStateChange(model.appStates.ERROR_STATE, "couldn't write to file: " + filePath);
			}
		});
	}

}

module.exports = new createHeaderIncludeTask();