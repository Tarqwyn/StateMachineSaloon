var fs = require('fs'),
cheerio = require('cheerio'),
model = require('model'),
ncp = require('ncp');
 
function BbcFooterTask() {

	/*------------------------------------------------------------------
		Variables
	------------------------------------------------------------------*/
	var taskFlow = [addCss, addStyleTagToHTML, addBbcFooterMarkup, copyMoreReadsImages];
	var currentSubTask = 0;
	var moreReadsImgcurrentIndex = 0;
	var moreReadsLength = 3;

	/*------------------------------------------------------------------
		Methods
	------------------------------------------------------------------*/
	function go() {

		/*---------------
			Strings
		---------------*/

		/*---------------
			Listeners
		---------------*/

		/*---------------
			Things to do:
			 * add css classes to the main css file
			 	* hideMainHeader { height:0; visibility:hidden; }
			 * if the div with an id name of "header-{num}" exists then add some inline css to set the height to 0
			 * if the div with the class "section-navigation" exists then add the bbc logo and the 'NEWS' string next to it to the left hand side of the div
			 	* img src = http://static.bbci.co.uk/frameworks/barlesque/2.59.12/orb/4/img/bbc-blocks-light.png
			 	* img css = float:left; padding:10px;
		---------------*/

		taskFlow[0]();

		console.log("TODO:create a user prompt to fill in the credits and add the more reads images and links. remove the right side border on small screen sizes. ADD THE SHARE TOOLS!");

	}
	this.go = go;

	function addCss() {
		var footerCssPath = model.localAssetsPath + model.cssPath + "/bbcFooter.css";
		var outputDir = model.outputFolderPath + "/static/css";
		
		//copy the istats lib into the new lib directory
		ncp(footerCssPath, outputDir + "/bbc_footer.css", function (err) {
			if (err) {
				return console.error("copy error: ", err);
			}
			subTaskComplete();
		});
	}

	function addStyleTagToHTML() {
		var htmlfilePath = model.outputFolderPath + '/index.html';
		readModuleFile(htmlfilePath, function (err, indexHtmlStr) {
			if (err) {
				console.log("err = ", err);
			}

			var $ = cheerio.load(indexHtmlStr);
			var linkPossibilities = $('link');
			var a, arrLength = linkPossibilities.length, cssFound = false;
			for (a = 0; a < arrLength; a++) {
				var linkHref = linkPossibilities[a].attribs.href;
				if (linkHref === ("./static/css/common." + model.projectNumber + ".css")) {
					cssFound = true;
					var footerLinkMarkup = "<link href=\"./static/css/bbc_footer.css\" rel=\"stylesheet\" type=\"text/css\">\n";
					$(linkPossibilities[a]).before(footerLinkMarkup);
					writeOutFile(htmlfilePath, $.html(), subTaskComplete);
					break;
				}
			}
			if (!cssFound) {
				console.log("ERROR: I couldn't find the common css file!");
			}

		});
	}

	function addBbcFooterMarkup() {

		var preFooterMarkup =	"<div class=\"bbc_shorthand_footer\">" +
									"<div class=\"bbc_shorthand_footer-credits\">" +
										"<h3>Credits</h3>" +
										"<dl>" +
											"<dt>Authors</dt>" +
												"<dd>Donna Bowater in Rio</dd>" +
												"<dd>Stephen Mulvey</dd>" +
												"<dd>Tanvi Misra in London</dd>" +
											"<dt>Published</dt>" +
												"<dd>6 March 2014</dd>" +
											"<dt>Developer</dt>" +
												"<dd>Richard Bangay</dd>" +
											"<dt>Production</dt>" +
												"<dd>Catherine Wynne</dd>" +
											"<dt>Design</dt>" +
												"<dd>Paul Finn</dd>" +
											"<dt>Graphics</dt>" +
												"<dd>Helene Sears</dd>" +
											"<dt>Editor</dt>" +
												"<dd>Giles Wilson</dd>" +
											"<dt>Built with</dt>" +
												"<dd>Shorthand</dd>" +
										"</dl>" +
										"<h3>Image Credits</h3>" +
										"<dl>" +
											"<dt>Large images</dt>" +
												"<dd>Gustavo Oliveria</dd>" +
												"<dd>Associated Press</dd>" +
												"<dd>Getty Images</dd>" +
											"<dt>Archive images</dt>" +
												"<dd>The Da Silva Costa family</dd>" +
												"<dd>The Oswald family</dd>" +
												"<dd>The Landowski Museum</dd>" +
											"<dt>Graphic sources</dt>" +
												"<dd>Redentor: De Bracos Abertos by Maria Izabel Noronha and Lilian Fontes</dd>" +
												"<dd>National Institute of Historic and Artistic Heritage, Brazil</dd>" +
												"<dd>O Cruzeiro magazine, 10 October 1931</dd>" +
										"</dl>" +
									"</div>" +
									"<div class=\"bbc_shorthand_footer-share\">" +
										"<h3>Share this article</h3>" +
										"<div class='share ns__share'>" +
											"<ul class='share__tools '>" +
												"<li class='share__tool share__tool--email'><a href='mailto:?subject=Shared%20from%20BBC%20News&amp;body=BBC%20Interactives%20http://www.bbc.co.uk/news/magazine-26144571' target='_blank'><span>Email</span></a>" +
												"</li>" +
												"<li class='share__tool share__tool--facebook'><a href='https://www.facebook.com/dialog/feed?app_id=58567469885&amp;redirect_uri=http%3A%2F%2Fwww.bbc.co.uk%2Fmodules%2Fsharetools%2Fcallback%3Fst_cb%3Dfacebook%23state%3Dfeed&amp;display=popup&amp;link=http://www.bbc.co.uk/news/magazine-26144571&amp;name=BBC%20Interactives%20%23BBCNewsGraphics&amp;description=Shared%20via%20BBC%20News&amp;picture=http://newsimg.bbc.co.uk/media/images/67373000/jpg/_67373987_09f1654a-e583-4b5f-bfc4-f05850c6d3ce.jpg'" +
												"target='_blank'><span>Facebook</span></a>" +
												"</li>" +
												"<li class='share__tool share__tool--twitter'><a href='https://twitter.com/intent/tweet?text=BBC%20Interactives %23BBCNewsGraphics http://www.bbc.co.uk/news/magazine-26144571' target='_blank'><span>Twitter</span></a>" +
												"</li>" +
											"</ul>" +
										"</div>" +
									"</div>" +
									"<div class=\"bbc_shorthand_footer-more\">" +
										"<h2>More from Magazine</h2>" +
										"<ul>" +
											"<li>" +
												"<a href=\"\">" +
													"<img src=\"./static/img/morereads_1.jpg\" />" +
													"<span>Digging for their lives: Russia's body hunters</span>" +
												"</a>" +
											"</li>" +
											"<li>" +
												"<a href=\"\">" +
													"<img src=\"./static/img/morereads_2.jpg\" />" +
													"<span>Nicky Crane: The secret double life of a gay neo-Nazi</span>" +
												"</a>" +
											"</li>" +
											"<li>" +
												"<a href=\"\">" +
													"<img src=\"./static/img/morereads_3.jpg\" />" +
													"<span>Alex Owumi: I played basketball for Gaddafi</span>" +
												"</a>" +
											"</li>" +
										"</ul>" +
									"</div>" +
								"</div>";


		var bbcFooterMarkup = "<div id=\"orb-footer\" class=\"orb-footer orb-footer-grey orb-location-d\">" +
			"<aside role=\"complementary\">" +
				"<div id=\"orb-aside\" class=\"orb-nav-sec b-r b-g-p\">" +
					"<div class=\"orb-footer-inner\" role=\"navigation\">" +
						"<h2>" +
							"<img src=\"http://static.bbci.co.uk/frameworks/barlesque/2.59.12/orb/4/img/bbc-blocks-light.png\" width=\"84\" height=\"24\" alt=\"BBC navigation\">" +
						"</h2>" +
						"<div class=\"orb-footer-primary-links\">" +
							"<ul>" +
								"<li class=\"orb-nav-news orb-d\"> <a href=\"http://www.bbc.co.uk/news/\">News</a> " +
								"</li>" +
								"<li class=\"orb-nav-sport\"> <a href=\"http://www.bbc.co.uk/sport/\">Sport</a> " +
								"</li>" +
								"<li class=\"orb-nav-weather\"> <a href=\"http://www.bbc.co.uk/weather/\">Weather</a> " +
								"</li>" +
								"<li class=\"orb-nav-iplayer orb-d\"> <a href=\"http://www.bbc.co.uk/iplayer/\">iPlayer</a> " +
								"</li>" +
								"<li class=\"orb-nav-tv\"> <a href=\"http://www.bbc.co.uk/tv/\">TV</a> " +
								"</li>" +
								"<li class=\"orb-nav-radio\"> <a href=\"http://www.bbc.co.uk/radio/\">Radio</a> " +
								"</li>" +
								"<li class=\"orb-nav-cbbc\"> <a href=\"http://www.bbc.co.uk/cbbc/\">CBBC</a>"  +
								"</li>" +
								"<li class=\"orb-nav-cbeebies\"> <a href=\"http://www.bbc.co.uk/cbeebies/\">CBeebies</a> " +
								"</li>" +
								"<li class=\"orb-nav-comedy\"> <a href=\"http://www.bbc.co.uk/comedy/\">Comedy</a>"  +
								"</li>" +
								"<li class=\"orb-nav-food\"> <a href=\"http://www.bbc.co.uk/food/\">Food</a> " +
								"</li>" +
								"<li class=\"orb-nav-history\"> <a href=\"http://www.bbc.co.uk/history/\">History</a> " +
								"</li>" +
								"<li class=\"orb-nav-learning\"> <a href=\"http://www.bbc.co.uk/learning/\">Learning</a> " +
								"</li>" +
								"<li class=\"orb-nav-music\"> <a href=\"http://www.bbc.co.uk/music/\">Music</a> " +
								"</li>" +
								"<li class=\"orb-nav-science\"> <a href=\"http://www.bbc.co.uk/science/\">Science</a> " +
								"</li>" +
								"<li class=\"orb-nav-nature\"> <a href=\"http://www.bbc.co.uk/nature/\">Nature</a> " +
								"</li>" +
								"<li class=\"orb-nav-local\"> <a href=\"http://www.bbc.co.uk/local/\">Local</a> " +
								"</li>" +
								"<li class=\"orb-nav-travelnews\"> <a href=\"http://www.bbc.co.uk/travelnews/\">Travel News</a> " +
								'</li>' +
								"<li class=\"orb-nav-fullaz\"> <a href=\"http://www.bbc.co.uk/a-z/\">Full A-Z</a> " +
								"</li>" +
							"</ul>" +
						"</div>" +
					"</div>" +
				"</div>" +
			"</aside>" +
			"<footer role=\"contentinfo\">" +
				"<div id=\"orb-contentinfo\" class=\"orb-nav-sec b-r b-g-p\">" +
					"<div class=\"orb-footer-inner\">" +
						"<ul>" +
							"<li> <a href=\"http://www.bbc.co.uk/terms/\">Terms of Use</a> " +
							"</li>" +
							"<li> <a href=\"http://www.bbc.co.uk/aboutthebbc/\">About the BBC</a>"  +
							"</li>" +
							"<li> <a href=\"http://www.bbc.co.uk/privacy/\">Privacy Policy</a> " +
							"</li>" +
							"<li> <a href=\"http://www.bbc.co.uk/privacy/bbc-cookies-policy.shtml\">Cookies</a> " +
							"</li>" +
							"<li> <a href=\"http://www.bbc.co.uk/accessibility/\">Accessibility Help</a> " +
							"</li>" +
							"<li> <a href=\"http://www.bbc.co.uk/guidance/\">Parental Guidance</a> " +
							"</li>" +
							"<li> <a href=\"http://www.bbc.co.uk/contact/\">Contact the BBC</a> " +
							"</li>" +
						"</ul>" +
						"<small>" +
							"<span class=\"orb-hilight\">BBC © 2014 </span>The BBC is not responsible for the content of external sites. <a href=\"http://www.bbc.co.uk/help/web/links/\" class=\"orb-hilight\">Read about our approach to external linking.</a> " +
						"</small>" +
					"</div>" +
				"</div>" +
			"</footer>" +
		"</div>";

		var htmlfilePath = model.outputFolderPath + '/index.html';
		readModuleFile(htmlfilePath, function (err, indexHtmlStr) {
			if (err) {
				console.log("err = ", err);
			}

			var $ = cheerio.load(indexHtmlStr);
			var footerPossibilities = $('footer');
			if (footerPossibilities.length) {
				$(footerPossibilities[0]).before(preFooterMarkup + bbcFooterMarkup);
				$(footerPossibilities[0]).remove();
			}
			else {
				//it doesn't look like theres a footer already in the document, add the new one in anyway
			}

			writeOutFile(htmlfilePath, $.html(), subTaskComplete);

		});

	}

	function copyMoreReadsImages() {
		copyMoreReadsImage();
	}

	function copyMoreReadsImage() {
		var iconPath = model.localAssetsPath + model.imagesPath + "/morereads_" + (moreReadsImgcurrentIndex + 1) + ".jpg";
		var iconOutputPath = model.outputFolderPath + "/static/img";
		
		ncp(iconPath, iconOutputPath + "/morereads_" + (moreReadsImgcurrentIndex + 1) + ".jpg", function (err) {
			if (err) {
				return console.error("copy error: ", err);
			}
			moreReadsImgcurrentIndex ++;
			if (moreReadsImgcurrentIndex < moreReadsLength) {
				copyMoreReadsImage();
			}
			else {
				subTaskComplete();
			}
		});
	}

	function subTaskComplete() {
		currentSubTask ++;
		if (currentSubTask < taskFlow.length) {
			taskFlow[currentSubTask]();
		}
		else {
			taskComplete();
		}
	}

	function taskComplete() {
		model.eventEmitter.emitEvent(model.emitterEvents.ARTICLE_TASK_COMPLETE);
	}

	/*------------------------------------------------------------------
		UTILITIES
	------------------------------------------------------------------*/
	function readModuleFile(path, callback) {
		try {
			var filename = require.resolve(path);
			fs.readFile(filename, 'utf8', callback);
		} catch (e) {
			callback(e);
		}
	}

	function writeOutFile(filePath, fileContents, callback) {
	fs.writeFile(filePath, fileContents, function(fileWriteErr) {
		if (fileWriteErr) {
			model.stateMachine.publishStateChange(model.appStates.ERROR_STATE, "couldn't write to file: " + filePath);
		}
		else {
			callback();
		}
	});
}

}
 
module.exports = new BbcFooterTask();